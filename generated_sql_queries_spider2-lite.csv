db_id|question|generated_sql_query|gold_sql_query
bigquery-public-data.ga4_obfuscated_sample_ecommerce|How many pseudo users were active in the last 7 days but inactive in the last 2 days as of January 7, 2021?|select count(distinct user_pseudo_id) from `bigquery-public-data`.ga4_obfuscated_sample_ecommerce.events_* where cast(event_date as date) between date('2021-01-01') and date('2021-01-07') and cast(event_date as date) not in ( date('2021-01-05'), date('2021-01-06') )|select count(distinct mdaysusers.user_pseudo_id) as n_day_inactive_users_count from ( select user_pseudo_id from `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*` as t cross join unnest(t.event_params) as event_params where event_params.key = 'engagement_time_msec' and event_params.value.int_value > 0 /* has engaged in last m = 7 days */ and event_timestamp > unix_micros(timestamp_sub(timestamp('2021-01-07 23:59:59'), interval 7 day)) /* include only relevant tables based on the fixed timestamp */ and _table_suffix between '20210101' and '20210107' ) as mdaysusers left join ( select user_pseudo_id from `bigquery-public-data.ga4_obfuscated_sample_ecommerce.events_*` as t cross join unnest(t.event_params) as event_params where event_params.key = 'engagement_time_msec' and event_params.value.int_value > 0 /* has engaged in last n = 2 days */ and event_timestamp > unix_micros(timestamp_sub(timestamp('2021-01-07 23:59:59'), interval 2 day)) /* include only relevant tables based on the fixed timestamp */ and _table_suffix between '20210105' and '20210107' ) as ndaysusers on mdaysusers.user_pseudo_id = ndaysusers.user_pseudo_id where ndaysusers.user_pseudo_id is null;
bigquery-public-data.google_analytics_sample|Find the top-selling product among customers who bought 'Youtube Men’s Vintage Henley' in July 2017, excluding itself.|select t2.item.productname, count(t2.item.productname) as product_count from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170710 as t1 inner join t1.hits as t2 where t2.item.productname = 'youtube men’s vintage henley' and t2.item.productname <> 'youtube men’s vintage henley' and t2.item.productname is not null group by 1 order by product_count desc limit 1|"with get_cus_id as ( select distinct fullvisitorid as henley_customer_id from `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`, unnest(hits) as hits, unnest(hits.product) as product where product.v2productname = ""youtube men's vintage henley"" and product.productrevenue is not null ) select product.v2productname as other_purchased_products from `bigquery-public-data.google_analytics_sample.ga_sessions_201707*` tab_a right join get_cus_id on get_cus_id.henley_customer_id=tab_a.fullvisitorid, unnest(hits) as hits, unnest(hits.product) as product where tab_a.fullvisitorid in ( select * from get_cus_id ) and product.v2productname <> ""youtube men's vintage henley"" and product.productrevenue is not null group by product.v2productname order by sum(product.productquantity) desc limit 1;"
bigquery-public-data.google_analytics_sample|Which traffic source receives the top revenue in 2017 and what is the difference (millions, rounded to two decimal places) between its highest and lowest revenue months?|with monthlyrevenue as ( select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170101 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170102 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170103 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170104 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170105 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170106 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170107 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170108 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170109 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170110 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170111 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170112 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170113 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170114 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170115 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170116 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170117 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170118 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170119 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170120 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170121 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170122 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170123 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170124 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170125 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170126 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170127 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170128 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170129 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170130 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170131 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170201 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170202 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170203 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170204 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170205 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170206 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170207 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170208 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170209 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170210 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170211 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170212 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170213 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170214 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170215 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170216 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170217 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170218 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170219 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170220 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170221 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170222 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170223 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170224 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170225 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170226 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170227 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170228 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170301 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170302 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170303 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170304 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170305 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170306 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170307 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170308 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170309 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170310 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170311 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170312 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170313 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170314 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170315 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170316 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170317 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170318 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170319 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170320 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170321 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170322 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170323 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170324 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170325 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170326 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170327 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170328 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170329 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170330 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170331 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170401 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170402 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170403 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170404 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170405 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170406 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170407 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170408 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170409 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170410 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170411 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170412 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170413 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170414 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170415 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170416 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170417 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170418 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170419 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170420 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170421 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170422 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170423 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170424 as t union all select t.date, t.trafficsource.source, sum(t.totals.totaltransactionrevenue) as monthly_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170425 as t union all select t.date, t.trafficsource.source,|"with monthly_revenue as ( select format_date(""%y%m"", parse_date(""%y%m%d"", date)) as month, trafficsource.source as source, round(sum(totals.totaltransactionrevenue) / 1000000, 2) as revenue from `bigquery-public-data.google_analytics_sample.ga_sessions_2017*` group by 1, 2 ), yearly_revenue as ( select source, sum(revenue) as total_revenue from monthly_revenue group by source ), top_source as ( select source from yearly_revenue order by total_revenue desc limit 1 ), source_monthly_revenue as ( select month, source, revenue from monthly_revenue where source in (select source from top_source) ), revenue_diff as ( select source, round(max(revenue), 2) as max_revenue, round(min(revenue), 2) as min_revenue, round(max(revenue) - min(revenue), 2) as diff_revenue from source_monthly_revenue group by source ) select source, diff_revenue from revenue_diff;"
bigquery-public-data.google_analytics_sample|I wonder how many days between the first transaction and the first visit for each transacting visitor in Feburary 2017, along with the device used in the transaction.|with visitorsessions as ( select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170201 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170202 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170203 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170204 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170205 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170206 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170207 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170208 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170209 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170210 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170211 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170212 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170213 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170214 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170215 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170216 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170217 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170218 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170219 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170220 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170221 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170222 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170223 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170224 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170225 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170226 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170227 union all select fullvisitorid, min(visitstarttime) as first_visit_time, min(totals.transactions) as first_transaction, totals.transactionrevenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170228 group by fullvisitorid having first_transaction is not null ), transactingvisitors as ( select vs.fullvisitorid, vs.first_visit_time, vs.first_transaction, vs.transactionrevenue, s.device.devicecategory from visitorsessions as vs inner join `bigquery-public-data`.google_analytics_sample.ga_sessions_20170201 as s on vs.fullvisitorid = s.fullvisitorid where vs.first_visit_time = s.visitstarttime ) select tv.fullvisitorid, tv.transactionrevenue, tv.devicecategory, tv.first_transaction - tv.first_visit_time as days_between from transactingvisitors as tv;|declare start_date string default '20170201'; declare end_date string default '20170228'; with visit as ( select fullvisitorid, min(date) as date_first_visit from `bigquery-public-data.google_analytics_sample.ga_sessions_*` where _table_suffix between start_date and end_date group by fullvisitorid ), transactions as ( select fullvisitorid, min(date) as date_transactions from `bigquery-public-data.google_analytics_sample.ga_sessions_*` as ga, unnest(ga.hits) as hits where hits.transaction.transactionid is not null and _table_suffix between start_date and end_date group by fullvisitorid ), device_transactions as ( select distinct fullvisitorid, date, device.devicecategory from `bigquery-public-data.google_analytics_sample.ga_sessions_*` as ga, unnest(ga.hits) as hits where hits.transaction.transactionid is not null and _table_suffix between start_date and end_date ), visits_transactions as ( select visit.fullvisitorid, date_first_visit, date_transactions, device_transactions.devicecategory as device_transaction from visit join transactions on visit.fullvisitorid = transactions.fullvisitorid join device_transactions on visit.fullvisitorid = device_transactions.fullvisitorid and transactions.date_transactions = device_transactions.date ) select fullvisitorid, date_diff(parse_date('%y%m%d', date_transactions), parse_date('%y%m%d', date_first_visit), day) as time, device_transaction from visits_transactions order by fullvisitorid;
bigquery-public-data.google_analytics_sample|What's the maximum monthly, weekly, and daily product revenues (in millions) generated by the top-performing traffic source in the first half of 2017?|with monthlyrevenue as ( select date_trunc(date, month) as month, sum(totals.transactionrevenue) / 1000000 as monthly_revenue_millions from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170127 where cast(date as bignumeric) between cast('20170101' as bignumeric) and cast('20170630' as bignumeric) group by month ), weeklyrevenue as ( select date_trunc(date, week) as week, sum(totals.transactionrevenue) / 1000000 as weekly_revenue_millions from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170127 where cast(date as bignumeric) between cast('20170101' as bignumeric) and cast('20170630' as bignumeric) group by week ), dailyrevenue as ( select date, sum(totals.transactionrevenue) / 1000000 as daily_revenue_millions from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170127 where cast(date as bignumeric) between cast('20170101' as bignumeric) and cast('20170630' as bignumeric) group by date ), toptrafficsource as ( select trafficsource.source as top_traffic_source, sum(totals.transactionrevenue) as total_revenue from `bigquery-public-data`.google_analytics_sample.ga_sessions_20170127 where cast(date as bignumeric) between cast('20170101' as bignumeric) and cast('20170630' as bignumeric) group by top_traffic_source order by total_revenue desc limit 1 ) select max(monthly_revenue_millions) as max_monthly_revenue_millions, max(weekly_revenue_millions) as max_weekly_revenue_millions, max(daily_revenue_millions) as max_daily_revenue_millions from monthlyrevenue join weeklyrevenue on monthlyrevenue.month = date_trunc(weeklyrevenue.week, month) join dailyrevenue on monthlyrevenue.month = date_trunc(dailyrevenue.date, month) join toptrafficsource on monthlyrevenue.month = date_trunc(toptrafficsource.date, month) where toptrafficsource.top_traffic_source = weeklyrevenue.week and toptrafficsource.top_traffic_source = dailyrevenue.date; **explanation:** 1. **`monthlyrevenue` cte:** this cte calculates the total product revenue for each month in the first half of 2017. 2. **`weeklyrevenue` cte:** this cte calculates the total product revenue for each week in the first half of 2017. 3. **`dailyrevenue` cte:** this cte calculates the total product revenue for each day in the first half of 2017. 4. **`toptrafficsource` cte:** this cte identifies the traffic source that generated the highest total revenue in the first half of 2017. 5. **final select statement:** this statement joins the ctes together based on the month, week, and day, and then uses the `max` function to find the maximum monthly, weekly, and daily product revenues generated by the top-performing traffic source. **key points:** * the `totals.transactionrevenue` field represents the product revenue for each session. * the `trafficsource.source` field represents the traffic source for each session. * the `date` field represents the date of the session. * the `date_trunc` function is used to truncate the date to the specified time unit (month, week, day). * the `cast` function is used to convert the `date` string to a numeric value for comparison. * the `limit` clause is used to select only the top-performing traffic source. * the final query joins the ctes to find the maximum product revenue for each time unit (month, week, day) for the top-performing traffic source. this query will provide the maximum monthly, weekly, and daily product revenues (in millions) generated by the top-performing traffic source in the first half of 2017.|declare start_date string default '20170101'; declare end_date string default '20170630'; -- step 1: calculate daily, weekly, and monthly revenues for each traffic source with daily_revenue as ( select trafficsource.source as source, date, sum(productrevenue) / 1000000 as revenue from `bigquery-public-data.google_analytics_sample.ga_sessions_*`, unnest (hits) as hits, unnest (hits.product) as product where _table_suffix between start_date and end_date group by source, date ), weekly_revenue as ( select source, concat(extract(year from (parse_date('%y%m%d', date))), 'w', extract(week from (parse_date('%y%m%d', date)))) as week, sum(revenue) as revenue from daily_revenue group by source, week ), monthly_revenue as ( select source, concat(extract(year from (parse_date('%y%m%d', date))),'0', extract(month from (parse_date('%y%m%d', date)))) as month, sum(revenue) as revenue from daily_revenue group by source, month ), -- step 2: determine the top-performing traffic source top_source as ( select source, sum(revenue) as total_revenue from daily_revenue group by source order by total_revenue desc limit 1 ), -- step 3: calculate maximum revenues for the top-performing traffic source max_revenues as ( ( select 'daily' as time_type, date as time, source, max(revenue) as max_revenue from daily_revenue where source = (select source from top_source) group by source, date order by max_revenue desc limit 1 ) union all ( select 'weekly' as time_type, week as time, source, max(revenue) as max_revenue from weekly_revenue where source = (select source from top_source) group by source, week order by max_revenue desc limit 1 ) union all ( select 'monthly' as time_type, month as time, source, max(revenue) as max_revenue from monthly_revenue where source = (select source from top_source) group by source, month order by max_revenue desc limit 1 ) ) -- step 4: select final results select time_type, time, source, max_revenue from max_revenues order by time_type, time;
